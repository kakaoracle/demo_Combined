<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.spring.springboot.mapper.ShopMapper">

    <insert id="createOrder" parameterType="org.spring.springboot.entity.OrderEntity">
        <selectKey resultType="Long" keyProperty="id" order="AFTER">
            select @@IDENTITY
        </selectKey>
        INSERT INTO `ORDER`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            ORDER_CODE,
            CREATE_DATE,
            LAST_UPDATE_DATE,
            BEGIN_DATE,
            END_DATE,
            CREATOR,
            CREATED_BY,
            LAST_UPDATED_BY,
            LAST_UPDATER,
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            #{orderCode},
            now(),
            now(),
            '2019-01-01 00:00:00',
            '2019-01-01 00:00:00',
            #{creator},
            #{createdBy},
            #{lastUpdatedBy},
            #{lastUpdater},
        </trim>

    </insert>


    <insert id="createDetail" parameterType="java.util.List">
        INSERT INTO DETAIL
        <trim prefix="(" suffix=")" suffixOverrides=",">
            ORDER_ID,
            DETAIL_CODE,
            LAST_UPDATE_DATE,
            PRODUCT_NAME,
            PRODUCT_PRICE,
            CREATOR,
            CREATED_BY,
            LAST_UPDATED_BY,
            LAST_UPDATER,
        </trim>
        VALUES
        <foreach collection="detailEntityList" item="item" index="index" separator=",">
        (
        #{item.orderId},
        #{item.detailCode},
        now(),
        #{item.productName},
        #{item.productPrice},
        #{item.creator},
        #{item.createdBy},
        #{item.lastUpdatedBy},
        #{item.lastUpdater}
        )
        </foreach>
    </insert>

    <select id="getOrders" resultType="org.spring.springboot.entity.OrderEntity">
        select
        ID as id,
        ORDER_CODE as orderCode,
        CREATE_DATE as createDate,
        LAST_UPDATE_DATE as lastUpdateDate,
        BEGIN_DATE as beginDate,
        END_DATE as endDate,
        CREATOR as creator,
        CREATED_BY as createdBy,
        LAST_UPDATED_BY as lastUpdatedBy,
        LAST_UPDATER as lastUpdater
        from `ORDER`
        <where>
            <if test="createdBy != null and createdBy != ''">
                CREATED_BY like concat(concat('%',#{createdBy}),'%')
            </if>
            <if test="createDateMin != null">
                <![CDATA[and CREATE_DATE >= CAST(#{createDateMin} as DATETIME)]]>
            </if>
            <if test="createDateMax != null">
                <![CDATA[and CREATE_DATE <= CAST(#{createDateMax} as DATETIME )]]>
            </if>
        </where>
        ORDER BY CREATE_DATE DESC
    </select>


    <select id="getDetailsByOrderId" resultType="org.spring.springboot.entity.DetailEntity" parameterType="java.lang.Long">
		select
		ID as id,
		ORDER_ID as orderId,
        DETAIL_CODE as detailCode,
        LAST_UPDATE_DATE as lastUpdateDate,
        PRODUCT_NAME as productName,
        PRODUCT_PRICE as productPrice,
        CREATOR as creator,
        CREATED_BY as createdBy,
        LAST_UPDATED_BY as lastUpdatedBy,
        LAST_UPDATER as lastUpdater
        from `DETAIL`
		where ORDER_ID = #{orderId}
	</select>

    <select id="getOrderById" resultType="org.spring.springboot.entity.OrderEntity" parameterType="java.lang.Long">
		select
        ID as id,
        ORDER_CODE as orderCode,
        CREATE_DATE as createDate,
        LAST_UPDATE_DATE as lastUpdateDate,
        BEGIN_DATE as beginDate,
        END_DATE as endDate,
        CREATOR as creator,
        CREATED_BY as createdBy,
        LAST_UPDATED_BY as lastUpdatedBy,
        LAST_UPDATER as lastUpdater
        from `ORDER`
		where ID = #{id}
	</select>


    <update id="updateOrder" parameterType="org.spring.springboot.entity.OrderEntity">
        UPDATE
        `ORDER`
        SET
        <if test="lastUpdatedBy!=null and lastUpdatedBy != ''">
            LAST_UPDATED_BY = #{lastUpdatedBy},
        </if>
        <if test="lastUpdater!=null and lastUpdater != ''">
            LAST_UPDATER = #{lastUpdater},
        </if>
        LAST_UPDATE_DATE = now()
        WHERE
        ID = #{id}
    </update>


    <delete id="deleteDetailByOrderId" parameterType="java.lang.Long">
        DELETE FROM
        `DETAIL`
        WHERE
        ORDER_ID = #{orderId}
    </delete>

    <delete id="deleteOrderById" parameterType="java.lang.Long">
        DELETE FROM
        `ORDER`
        WHERE
        ID = #{id}
    </delete>


    <!--


    <update id="updateCity" parameterMap="City">
        update
        city
        set
        <if test="provinceId!=null">
            province_id = #{provinceId},
        </if>
        <if test="cityName!=null">
            city_name = #{cityName},
        </if>
        <if test="description!=null">
            description = #{description}
        </if>
        where
        id = #{id}
    </update>

    <delete id="deleteCity" parameterType="java.lang.Long">
		delete from
			city
		where
			id = #{id}
	</delete>-->
</mapper>
